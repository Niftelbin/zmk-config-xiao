/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC   |  1  |  2  |  3   |  4   |  5   |                    |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB   |  Q  |  W  |  E   |  R   |  T   |                    |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL  |  A  |  S  |  D   |  F   |  G   |                    |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT  |  Z  |  X  |  C   |  V   |  B   |                    |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            // |    2   |  2  | f   | 6    | 4    | 1    |                    | 2    | 1     | w     | s    | n     |  a    |

            bindings = <
   &kp TAB  &kp F1  &kp F2  &kp F3            &kp F4    &kp F5     &kp F6  &kp F7                 &kp F8         &kp F9     &kp F10           &kp F12
&kp ESCAPE   &kp Q   &kp W   &kp E             &kp R     &kp T      &kp Y   &kp U                  &kp I          &kp O       &kp P  &kp LEFT_BRACKET
     &kp Y   &kp A   &kp S   &kp D             &kp F     &kp G      &kp H   &kp J                  &kp K          &kp L    &kp SEMI           &kp SQT
 &kp LSHFT   &kp Z   &kp X   &kp C             &kp V     &kp B  &kp MINUS   &kp N                  &kp M      &kp COMMA  &kp PERIOD         &kp SLASH
 &kp SPACE   &mo 1   &mo 2   &mo 3  &kp LEFT_CONTROL  &kp LALT      &mo 2   &mo 1  &mt RIGHT_SHIFT SPACE  &kp RIGHT_ALT   &kp ENTER     &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |                   |      |  _    |  +    |  {   |   }   |  "|"  |
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |

            bindings = <
         &trans     &kp F5    &kp F6       &kp F11    &kp F12         &kp F9     &kp RA(NUBS)        &kp ENTER       &kp PERIOD            &none        &kp TAB    &kp ESC
         &trans    &kp DEL    &kp UP      &kp BSPC   &kp HOME    &kp PAGE_UP  &kp KP_MULTIPLY  &kp KP_NUMBER_1        &kp KP_N2  &kp KP_NUMBER_3  &kp KP_DIVIDE  &kp ASTRK
       &kp NUHS   &kp LEFT  &kp DOWN     &kp RIGHT    &kp END  &kp PAGE_DOWN  &kp KP_NUMBER_0  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6    &kp KP_PLUS   &kp LPAR
&kp EXCLAMATION  &kp GRAVE  &kp NUBS  &kp LS(NUBS)  &kp EQUAL      &kp ENTER       &kt LS(N0)  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9         &trans     &trans
         &trans     &trans    &trans        &trans     &trans         &trans           &trans           &trans           &trans           &trans         &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_2 {
            bindings = <
   &trans  &kp RA(NUMBER_2)    &kp RA(N3)             &none          &none        &kp KP_NUM  &kp F1            &kp F2            &kp F3    &kp F4          &kp F5       &kp F11
   &trans        &kp RA(N7)    &kp RA(N0)  &kp RA(NUMBER_8)     &kp RA(N9)             &none   &none  &kp RA(NUMBER_2)  &kp RA(NUMBER_3)     &none           &none  &kp LEFT_WIN
&kp COMMA  &kp LS(NUMBER_2)    &kp LS(N3)        &kp LS(N4)     &kp LS(N5)  &kp LS(NUMBER_6)   &none  &kp RA(NUMBER_8)  &kp RA(NUMBER_9)     &none          &kp UP         &none
   &trans     &kp LS(GRAVE)  &kp RA(RBKT)     &kp RA(MINUS)  &kp LS(EQUAL)         &kp ENTER   &none             &none             &none  &kp LEFT  &kp DOWN_ARROW     &kp RIGHT
   &trans            &trans        &trans            &trans         &trans            &trans  &trans            &trans            &trans    &trans          &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
      &kp ESC  &kp KP_SUBTRACT      &kp KP_PLUS     &kp ASTERISK  &kp LEFT_PARENTHESIS                &none  &bt BT_SEL 0      &bt BT_SEL 1      &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &bootloader
      &kp TAB    &kp KP_DIVIDE  &kp KP_NUMBER_7  &kp KP_NUMBER_8       &kp KP_NUMBER_9  &kp RS(KP_ASTERISK)         &none             &none             &none         &none         &none  &kp LEFT_WIN
&kp LS(COMMA)       &kp KP_DOT  &kp KP_NUMBER_4  &kp KP_NUMBER_5       &kp KP_NUMBER_6      &kp KP_NUMBER_0         &none             &none             &none         &none        &kp UP         &none
    &kp ENTER          &kp DOT  &kp KP_NUMBER_1  &kp KP_NUMBER_2       &kp KP_NUMBER_3     &kp LS(NUMBER_0)         &none  &kp RA(NUMBER_8)  &kp RA(NUMBER_9)      &kp LEFT      &kp DOWN     &kp RIGHT
       &trans           &trans           &trans           &trans                &trans               &trans        &trans            &trans            &trans        &trans        &trans        &trans
            >;
        };
    };
};
